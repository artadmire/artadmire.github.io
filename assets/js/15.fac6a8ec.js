(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{619:function(s,t,a){s.exports=a.p+"assets/img/v81.616c9245.png"},620:function(s,t,a){s.exports=a.p+"assets/img/v82.4cfd763e.png"},621:function(s,t,a){s.exports=a.p+"assets/img/v83.65ef0f78.png"},622:function(s,t,a){s.exports=a.p+"assets/img/v84.c3b5a6e9.png"},695:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript的内存管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript的内存管理"}},[s._v("#")]),s._v(" JavaScript的内存管理")]),s._v(" "),n("h2",{attrs:{id:"周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#周期"}},[s._v("#")]),s._v(" 周期")]),s._v(" "),n("p",[s._v("在JavaScript中，当我们创建变量、函数或任何你能想到的东西时，JS引擎会为此分配内存，并在不再需要时释放它。")]),s._v(" "),n("h2",{attrs:{id:"内存分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存分类"}},[s._v("#")]),s._v(" 内存分类")]),s._v(" "),n("p",[s._v("下图中分了几个块：")]),s._v(" "),n("ul",[n("li",[s._v("栈内存(只能从栈顶插入和删除元素，先进后出)，存放变量和undifiend（没有内存地址可以指向），它的值都是内存地址。")]),s._v(" "),n("li",[s._v("堆内存 存放对象和null，var  a = null和var b = null； 指向的是同一个内存地址；")]),s._v(" "),n("li",[s._v("池，存放常量，同一个值只占有一块内存，只有三种类型 string number boolean的值")]),s._v(" "),n("li",[s._v("函数缓存区, 存放函数，")]),s._v(" "),n("li",[s._v("函数加载区，函数执行的时候占有的内存。")])]),s._v(" "),n("p",[s._v("分别举例分析：")]),s._v(" "),n("ul",[n("li",[s._v("a 是一个对象，指向的是堆中内存地址")]),s._v(" "),n("li",[s._v("b (string)，c(number)，d(boolean)指向的是池中的内存地址。")]),s._v(" "),n("li",[s._v("再看m和n,通过构造函数的方式创建数值，会在栈中分别开辟空间存放变量m,和n，而他们都存放的都是池中的内存地址指向123，引用的是同一个值。但是m和n却是不同的。")]),s._v(" "),n("li",[s._v("创建函数fun 函数加载区就会存放函数fun，如果我们通过var fun = function(){}的方式创建，这是栈中就会增加一个变量fun,指向函数加载区中的匿名函数。")]),s._v(" "),n("li",[s._v("当函数调用的时候，就会在函数缓存区开辟一块空间，普通函数在执行结束，就会被释放。\nnew P() 通过new 关键字去调用一个函数, typeof 结果会是object，会在堆内存中开辟一块空间。")]),s._v(" "),n("li",[s._v("堆内存的回收是我们可以控制的，比如说对象a。如果设置为a = null， 堆内存会被回收掉。")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(619),alt:"v81"}})]),s._v(" "),n("h2",{attrs:{id:"测试内存占用情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试内存占用情况"}},[s._v("#")]),s._v(" 测试内存占用情况")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'王源'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("findBoyfriend")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" _name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" _name\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findBoyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 王源")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("memoryUsage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[n("img",{attrs:{src:a(620),alt:"v82"}})]),s._v(" "),n("p",[s._v("rss总内存 heapTotal 堆内存 heapUsed实际使用的内存 external 引擎底层语言占用的内存内部的_name变量不会被回收掉。会常驻内存。所以我们应该换成下面的方式去写闭包。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Boyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'王源'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("findBoyfriend")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" _name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" _name\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    _name "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("findBoyfriend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 王源")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[n("img",{attrs:{src:a(621),alt:"v83"}})]),s._v(" "),n("p",[s._v("实际使用的内存变小了。")]),s._v(" "),n("h2",{attrs:{id:"垃圾回收机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[s._v("#")]),s._v(" 垃圾回收机制")]),s._v(" "),n("h3",{attrs:{id:"为什么v8会有内存限制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么v8会有内存限制"}},[s._v("#")]),s._v(" 为什么v8会有内存限制")]),s._v(" "),n("p",[s._v("V8引擎的设计之初，只是作为浏览器端JavaScript的执行环境，在浏览器端我们其实很少会遇到使用大量内存的场景，因此也就没有必要将最大内存设置得过高。")]),s._v(" "),n("p",[s._v("具体来说，默认情况下，V8引擎在64位系统下最多只能使用约1.4GB的内存，在32位系统下最多只能使用约0.7GB的内存，在这样的限制下，必然会导致在node中无法直接操作大内存对象，比如将一个2GB大小的文件全部读入内存进行字符串分析处理，即使物理内存高达32GB也无法充分利用计算机的内存资源。")]),s._v(" "),n("h3",{attrs:{id:"为什么需要垃圾回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要垃圾回收"}},[s._v("#")]),s._v(" 为什么需要垃圾回收？")]),s._v(" "),n("p",[s._v("我们知道，在V8引擎逐行执行JavaScript代码的过程中，当遇到函数的情况时，会为其创建一个函数执行上下文(Context)环境并添加到调用堆栈的栈顶，函数的作用域(handleScope)中包含了该函数中声明的所有变量，当该函数执行完毕后，对应的执行上下文从栈顶弹出，函数的作用域会随之销毁，其包含的所有变量也会统一释放并被自动回收。试想如果在这个作用域被销毁的过程中，其中的变量不被回收，即持久占用内存，那么必然会导致内存暴增，从而引发内存泄漏导致程序的性能直线下降甚至崩溃，因此内存在使用完毕之后理当归还给操作系统以保证内存的重复利用。")]),s._v(" "),n("h3",{attrs:{id:"查看内存占用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看内存占用"}},[s._v("#")]),s._v(" 查看内存占用")]),s._v(" "),n("p",[s._v("上文已经用到过，process.memoryUsage()方法来让我们可以查看当前node进程所占用的实际内存大小。")]),s._v(" "),n("ul",[n("li",[s._v("heapTotal：表示V8当前申请到的堆内存总大小。")]),s._v(" "),n("li",[s._v("heapUsed：表示当前内存使用量。")]),s._v(" "),n("li",[s._v("external：表示V8内部的C++对象所占用的内存。")]),s._v(" "),n("li",[s._v("rss(resident set size)：表示驻留集大小，是给这个node进程分配了多少物理内存，这些物理内存中包含堆，栈和代码片段。对象，闭包等存于堆内存，变量存于栈内存，实际的JavaScript源代码存于代码段内存。使用Worker线程时，rss将会是一个对整个进程有效的值，而其他字段则只针对当前线程。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该命令可以用来查看node中可用的V8引擎的选项及其含义")]),s._v("\nnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("v8"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("options\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置新生代内存中单个半空间的内存最小值，单位MB")]),s._v("\nnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("min"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("semi"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("space"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("size"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置新生代内存中单个半空间的内存最大值，单位MB")]),s._v("\nnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("semi"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("space"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("size"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置老生代内存最大值，单位MB")]),s._v("\nnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("max"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("old"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("space"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("size"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v(" xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"老ie的垃圾回收-引用记数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#老ie的垃圾回收-引用记数"}},[s._v("#")]),s._v(" 老IE的垃圾回收（引用记数）")]),s._v(" "),n("p",[s._v("初级的垃圾回收算法，此算法把'对象是否不再需要'简化为'简化为对象是否有其它对象引用到它'。如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收掉。")]),s._v(" "),n("p",[s._v("缺点：循环引用不会被回收")]),s._v(" "),n("p",[s._v("比如下面的写法：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" son "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'John'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" dad "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Johnson'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nson"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dad "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dad"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndad"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("son "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" son"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nson "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndad "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"标记清除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标记清除"}},[s._v("#")]),s._v(" 标记清除")]),s._v(" "),n("p",[s._v('标记清除是指当变量进入环境时，这个变量被标记为"进入环境"。而当变量离开环境时，则将其标记为"离开环境"，最后垃圾回收器完成内存清除工作，销毁哪些带标记的值，并回收它们所占用的内存空间。')]),s._v(" "),n("p",[s._v("在V8中，主要将内存分为新生代和老生代（不只有这两种），新生代中的对象存活时间较短，老生代中的对象存活时间较长（或常驻内存中）。")]),s._v(" "),n("p",[n("strong",[s._v("新生代")])]),s._v(" "),n("ol",[n("li",[s._v("先将堆内存一分为二，每个内存空间称为semispace（半空间）")]),s._v(" "),n("li",[s._v("在这两个semispace中，只有一个处于使用中，另一个处于闲置中")]),s._v(" "),n("li",[s._v("处于使用状态的空间称为From空间，处于闲置状态的空间称为To空间")]),s._v(" "),n("li",[s._v("当我们分配对象时，先是在From空间中进行分配")]),s._v(" "),n("li",[s._v("开始进行垃圾回收时，会检查From空间中存活的对象")]),s._v(" "),n("li",[s._v("存活的被复制到To空间中，非存活对象占用的空间被释放")]),s._v(" "),n("li",[s._v("完成复制后，From空间和To空间的角色发生对换")])]),s._v(" "),n("p",[n("strong",[s._v("老生代")])]),s._v(" "),n("p",[s._v("如过To空间的对象满足以下两个条件，就会晋升到老生代。")]),s._v(" "),n("ul",[n("li",[s._v("对象是否经历过一次Scavenge算法")]),s._v(" "),n("li",[s._v("To空间的内存占比是否已经超过25%")])]),s._v(" "),n("p",[s._v("老生代会将存活的对象移到一边，需要被回收的移到另一边，然后将需要被回收的进行整体的垃圾回收。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(622),alt:"v84"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);