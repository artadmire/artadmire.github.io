(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{735:function(t,e,l){"use strict";l.r(e);var a=l(13),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"编译原理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#编译原理"}},[t._v("#")]),t._v(" 编译原理")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("流程")]),t._v(" "),l("th",{staticStyle:{"text-align":"center"}},[t._v("结果")]),t._v(" "),l("th",{staticStyle:{"text-align":"right"}},[t._v("编译器文件")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("词法分析")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}},[t._v("token流")]),t._v(" "),l("td",{staticStyle:{"text-align":"right"}},[t._v("Scanner")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("扫描器（scanner.ts）")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}}),t._v(" "),l("td",{staticStyle:{"text-align":"right"}}),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("语法分析")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}},[t._v("Ast(抽象语法树)")]),t._v(" "),l("td",{staticStyle:{"text-align":"right"}},[t._v("Parser 解析器（parser.ts）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("绑定")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}},[t._v("Symbol")]),t._v(" "),l("td",{staticStyle:{"text-align":"right"}},[t._v("Binder 绑定器（binder.ts）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("Symbol链接相同结构的声明，帮助类型系统推导出这些具名声明")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("检查")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}},[t._v("类型验证")]),t._v(" "),l("td",{staticStyle:{"text-align":"right"}},[t._v("Checker 检查器（checker.ts）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("解析每种类型的构造，负责处理、检查针对每个类型的语义操作，并生成合适的诊断信息")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("生成代码")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}},[t._v(".js/.d.ts/.js.map")]),t._v(" "),l("td",{staticStyle:{"text-align":"right"}},[t._v("Emitter 发射器（emitter.ts）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("JavaScript源码(.js)、类型定义文件(.d.ts)或source map文件(.js.map)，其中类型定义文件可以帮助开发者在各种IDE中获取TypeScript的类型信息，source map文件则是一个存储源代码与编译代码对应位置映射的信息文件，在debug时我们需要利用source map文件来找到实际运行的代码(最终生成的.js文件)和其原始代码(开发者实际编写的.ts文件)的位置对应关系。")])])])]),t._v(" "),l("p",[t._v("上面表格简单说明：")]),t._v(" "),l("ol",[l("li",[t._v("源码 ～ scanner(扫描器) ～ token数据流 ～ parser(解析器) -> AST(抽象语法树)")]),t._v(" "),l("li",[t._v("AST(抽象语法树) ～ binder(绑定器) -> symbols(符号)")]),t._v(" "),l("li",[t._v("AST(抽象语法树) + symbols ~ checker(检查器) -> 类型检查功能")]),t._v(" "),l("li",[t._v("AST(抽象语法树) + checker(检查器) ～ emitter(发射器) -> js代码")])])])}),[],!1,null,null,null);e.default=i.exports}}]);