(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{687:function(t,a,v){"use strict";v.r(a);var s=v(13),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"node-js基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node-js基础"}},[t._v("#")]),t._v(" Node.js基础")]),t._v(" "),v("h2",{attrs:{id:"什么是node-js"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是node-js"}},[t._v("#")]),t._v(" 什么是Node.js")]),t._v(" "),v("p",[t._v("Node.js 是一个基于Chrome V8引擎的JavaScript运行环境。Node.js使用了一个事件驱动、非阻塞式\nI/O的模型。")]),t._v(" "),v("h3",{attrs:{id:"javascript"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),v("p",[t._v("JavaScript 语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。那么，为什JavaScript 不能有多个线程呢 ？这样能提高效率啊。")]),t._v(" "),v("p",[t._v("JavaScript 的单线程，与它的用途有关。作为浏览器脚本语言，JavaScript 的主要用途是与用户互动，以及操作 DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定JavaScript 同时有两个线程，一个线程在某个 DOM 节点上添加内容，另一个线程删除了这个\n节点，这时浏览器应该以哪个线程为准？")]),t._v(" "),v("p",[t._v("所以，为了避免复杂性，从一诞生，JavaScript 就是单线程，这已经成了这⻔语言的核心特\n征，将来也不会改变")]),t._v(" "),v("h3",{attrs:{id:"线程和进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程和进程"}},[t._v("#")]),t._v(" 线程和进程")]),t._v(" "),v("p",[t._v("进程是 CPU 资源分配的最小单位；线程是 CPU 调度的最小单位 。")]),t._v(" "),v("ul",[v("li",[t._v("多进程：在同一个时间里，同一个计算机系统中如果允许两个或两个以上的进程\n处于运行状态。多进程带来的好处是明显的，比如你可以听歌的同时，打开编辑\n器敲代码，编辑器和听歌软件的进程之间丝毫不会相互干扰。")]),t._v(" "),v("li",[t._v("多线程：程序中包含多个执行流，即在一个程序中可以同时运行多个不同的线程\n来执行不同的任务，也就是说允许单个程序创建多个并行执行的线程来完成各自\n的任务。")])]),t._v(" "),v("p",[t._v("浏览器内核是多线程的:")]),t._v(" "),v("ol",[v("li",[t._v("GUI渲染线程")])]),t._v(" "),v("p",[t._v("1）负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制\n2）当界面需要重绘(Repaint)或由于某种操作引发回流(reflow)时，该线程就会执行\n3）与JS引擎互斥，当执行JS引擎线程时，GUI会pending，当任务队列空闲时，才会继续执行GUI")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("JS引擎线程")])]),t._v(" "),v("p",[t._v("1）也称为JS内核，负责处理javascript脚本程序\n2）JS引擎线程负责解析Javascript脚本，运行代码\n3）JS引擎一直等待任务队列中任务的到来，然后加以处理，浏览器无论什么时候都只有一个JS线程在运行JS程序\n4）同样注意，GUI渲染线程与JS引擎线程时互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("事件触发线程")])]),t._v(" "),v("p",[t._v("1）事件触发线程归属于浏览器而不是JS引擎(辅助JS引擎)，用来控制事件循环(存在一个事件队列)\n2）当JS引擎执行代码块如setTimeOut时(也可来自浏览器内核的其他线程，如鼠标点击，Ajax异步请求等)，会将对应的任务添加到事件线程中\n3）当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理\n4）注意，由于JS的单线程关系，所以这些待处理队列的事件都得排队等待JS引擎的处理(当JS引擎空闲时才会去执行)")]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[t._v("定时触发器线程")])]),t._v(" "),v("p",[t._v("1）setInterval、setTimeOut所在线程\n2）浏览器定时计数器并不是由JavaScript引擎计数的，(因为JavaScript引擎时单线程的，如果处于阻塞线程状态就会影响计时的准确)\n3）因此通过单独线程来计时并触发(计时完毕后，添加到事件队列中，等待JS引擎空闲后执行)\n4）注意，W3C在HTML标准中规定要求setTimeOut中低于4ms的时间间隔为4ms")]),t._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[t._v("异步HTTP请求线程(IO线程)")])]),t._v(" "),v("p",[t._v("1）在XMLHttpRequest在连接后是通过浏览器新开一个线程请求\n2）将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中(放入事件触发线程中)。再由JavaScript引擎执行。")]),t._v(" "),v("h3",{attrs:{id:"v8引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎"}},[t._v("#")]),t._v(" V8引擎")]),t._v(" "),v("p",[t._v("支持语言：V8是用C ++编写的Google开源高性能JavaScript和WebAssembly引擎，它用于\nChrome和Node.js等；（译：V8可以运行JavaScript和WebAssembly引擎编译的汇编语言等）\n跨平台：它实现ECMAScript和WebAssembly，并在Windows 7或更高版本，macOS 10.12+和使\n用x64，IA-32，ARM或MIPS处理器的Linux系统上运行；\n嵌入式：V8可以独立运行，也可以嵌入到任何C ++应用程序中；")]),t._v(" "),v("p",[t._v("解释型语言，不需要提前编译。运行效率低于编译型语言（如：c++）")]),t._v(" "),v("h2",{attrs:{id:"node-js特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node-js特点"}},[t._v("#")]),t._v(" Node.js特点")]),t._v(" "),v("ul",[v("li",[t._v("它是一个Javascript运行环境")]),t._v(" "),v("li",[t._v("依赖于Chrome V8引擎进行代码解释执行")]),t._v(" "),v("li",[t._v("事件驱动")]),t._v(" "),v("li",[t._v("非阻塞I/O")]),t._v(" "),v("li",[t._v("轻量、可伸缩，适于实时数据交互应用")])]),t._v(" "),v("h2",{attrs:{id:"node-js架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node-js架构"}},[t._v("#")]),t._v(" Node.js架构")]),t._v(" "),v("p",[t._v("nodejs技术架构图：")]),t._v(" "),v("p",[v("a",{attrs:{href:"./img/node1.png"}},[t._v("node1")])]),t._v(" "),v("p",[t._v("同时这里有一个nodejs工作流程:")]),t._v(" "),v("p",[v("a",{attrs:{href:"./img/node2.png"}},[t._v("node2")])]),t._v(" "),v("ul",[v("li",[t._v("应用层： 即 JavaScript 交互层，常⻅的就是 Node.js 的模块，比如 http，fs。")]),t._v(" "),v("li",[t._v("V8引擎层： 即利用 V8 引擎来解析JavaScript 语法，进而和下层 API 交互。")]),t._v(" "),v("li",[t._v("NodeAPI层： 为上层模块提供系统调用，一般是由 C 语言来实现，和操作系统进行交互 。")]),t._v(" "),v("li",[t._v("LIBUV层： 是跨平台的底层封装，实现了 事件循环、文件操作等，是 Node.js 实现异步的核心")])])])}),[],!1,null,null,null);a.default=e.exports}}]);